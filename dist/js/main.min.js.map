{"version":3,"sources":["js/main.js"],"names":["ready","fn","document","readyState","addEventListener","renderFeed","url","query","feed","google","feeds","Feed","elm","querySelectorAll","load","result","f","_","chain","entries","map","entry","React","createElement","Repos","key","link","name","title","value","render","ReposList","data","GITHUB_API_URL","REPOS_NUM","createClass","displayName","href","this","props","fetch","then","response","json","repos","r","select","fork","id","html_url","first","ex","console","log"],"mappings":"AAEA,QAASA,OAAMC,GACgB,WAAvBC,SAASC,WACTF,IAEAC,SAASE,iBAAiB,mBAAoBH,GA8CtD,QAASI,YAAWC,EAAKC,GACrB,MAAO,YACH,GAAIC,GAAO,GAAIC,QAAOC,MAAMC,KAAKL,GAC7BM,EAAMV,SAASW,iBAAiBN,GAAO,EAC3CC,GAAKM,KAAK,SAASC,GACf,GAAIC,GAAIC,EAAEC,MAAMH,EAAOP,KAAKW,SACvBC,IAAI,SAASC,GAAQ,MAAOC,OAAMC,cAAcC,OAAQC,IAAKJ,EAAMK,KAAMC,KAAMN,EAAMO,MAAOtB,IAAKe,EAAMK,SACvGG,OAELP,OAAMQ,OACFR,MAAMC,cAAcQ,WAAYC,KAAMhB,IACtCJ,MA/DhBH,OAAOK,KAAK,QAAS,IAWrB,IAAImB,gBAAiB,gDACjBC,UAAY,EAEZV,MAAQF,MAAMa,aAAaC,YAAa,QACxCN,OAAQ,WACJ,MACIR,OAAMC,cAAc,KAAM,KAAMD,MAAMC,cAAc,KAAMc,KAAMC,KAAKC,MAAMjC,KAAMgC,KAAKC,MAAMZ,UAKpGI,UAAYT,MAAMa,aAAaC,YAAa,YAC5CN,OAAQ,WACJ,MACIR,OAAMC,cAAc,KAAM,KACtBe,KAAKC,MAAMP,QAM3BhC,OAAM,WACFwC,MAAMP,gBACDQ,KAAK,SAASC,GACX,MAAOA,GAASC,SACjBF,KAAK,SAASG,GACb,GAAIC,GAAI5B,EAAEC,MAAM0B,GACXE,OAAO,SAASF,GAAQ,OAAQA,EAAMG,OACtC3B,IAAI,SAASwB,GAAQ,MAAOtB,OAAMC,cAAcC,OAAQC,IAAKmB,EAAMI,GAAIrB,KAAMiB,EAAMjB,KAAMrB,IAAKsC,EAAMK,aACpGC,MAAMhB,WACNL,OAELP,OAAMQ,OACFR,MAAMC,cAAcQ,WAAYC,KAAMa,IACtC3C,SAASW,iBAAiB,gBAAgB,MAZtD2B,SAca,SAASW,GACdC,QAAQC,IAAI,iBAAkBF,OAqB1CnD,MAAMK,WAAW,gCAAiC,UAClDL,MAAMK,WAAW,iCAAkC","file":"js/main.min.js","sourcesContent":["google.load('feeds', '1');\n\nfunction ready(fn) {\n    if (document.readyState != 'loading') {\n        fn();\n    } else {\n        document.addEventListener('DOMContentLoaded', fn);\n    }\n}\n\n// const\nvar GITHUB_API_URL = '//api.github.com/users/kan/repos?sort=updated';\nvar REPOS_NUM = 5;\n\nvar Repos = React.createClass({displayName: \"Repos\",\n    render: function() {\n        return (\n            React.createElement(\"li\", null, React.createElement(\"a\", {href: this.props.url}, this.props.name))\n        );\n    }\n});\n\nvar ReposList = React.createClass({displayName: \"ReposList\",\n    render: function() {\n        return (\n            React.createElement(\"ul\", null, \n                this.props.data\n            )\n        );\n    }\n});\n\nready(function() {\n    fetch(GITHUB_API_URL)\n        .then(function(response) {\n            return response.json()\n        }).then(function(repos) {\n            var r = _.chain(repos)\n                .select(function(repos){ return !repos.fork })\n                .map(function(repos){ return React.createElement(Repos, {key: repos.id, name: repos.name, url: repos.html_url}) })\n                .first(REPOS_NUM)\n                .value();\n\n            React.render(\n                React.createElement(ReposList, {data: r}),\n                document.querySelectorAll('#github-list')[0]\n            );\n        }).catch(function(ex) {\n            console.log('parsing error:', ex);\n        });\n});\n\nfunction renderFeed(url, query) {\n    return function() {\n        var feed = new google.feeds.Feed(url);\n        var elm = document.querySelectorAll(query)[0];\n        feed.load(function(result){\n            var f = _.chain(result.feed.entries)\n                .map(function(entry){ return React.createElement(Repos, {key: entry.link, name: entry.title, url: entry.link}) })\n                .value();\n\n            React.render(\n                React.createElement(ReposList, {data: f}),\n                elm\n            );\n        });\n    };\n}\n\nready(renderFeed('http://memo.fushihara.net/rss', '#blog'));\nready(renderFeed('http://ramen.fushihara.net/rss', '#ramen'));\n"],"sourceRoot":"/source/"}